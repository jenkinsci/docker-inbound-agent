---
name: Bump the parent image `jenkins/agent` version

scms:
  default:
    kind: github
    spec:
      user: "{{ .github.user }}"
      email: "{{ .github.email }}"
      owner: "{{ .github.owner }}"
      repository: "{{ .github.repository }}"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      branch: "{{ .github.branch }}"

sources:
  lastVersion:
    kind: githubrelease
    name: Get the latest version of the parent image `jenkins/agent`
    spec:
      owner: jenkinsci
      repository: docker-agent
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      versionfilter:
        kind: latest

conditions:
  checkJdk11AlpineDockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-alpine-jdk11" for linux/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-alpine-jdk11'
  checkJdk17AlpineDockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-alpine-jdk17" for linux/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-alpine-jdk17'
  checkJdk21AlpineDockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-alpine-jdk21" for linux/amd64 is available
    disablesourceinput: true
    spec:
      architectures:
        - amd64
        - arm64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-alpine-jdk21'
  checkJdk11DebianDockerImages:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk11" for linux/amd64, linux/arm64, linux/arm/v7, s390x and ppc64le is available
    disablesourceinput: true
    spec:
      architectures:
        - amd64
        - arm64
        - linux/arm/v7
        - s390x
        - ppc64le
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk11'
  checkJdk17DebianDockerImages:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk17" for linux/amd64, linux/arm64 & linux/arm/v7 is available
    disablesourceinput: true
    spec:
      architectures:
        - amd64
        - arm64
        - linux/arm/v7
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk17'
  checkJdk21DebianDockerImages:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk21-preview" for linux/amd64 & linux/arm64 is available
    disablesourceinput: true
    spec:
      architectures:
        - amd64
        - arm64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk21'
  checkJdk21DebianPreviewDockerImages:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk21-preview" for ppc64le, linux/arm/v7 and s390x is available
    disablesourceinput: true
    spec:
      architectures:
        - ppc64le
        - linux/arm/v7
        - s390x
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk21-preview'
  checkJdk11WindowsNanoserver1809DockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk11-nanoserver-1809" for windows/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk11-nanoserver-1809'
  checkJdk17WindowsNanoserver1809DockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk17-nanoserver-1809" for windows/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk17-nanoserver-1809'
  checkJdk21WindowsNanoserver1809DockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk21-nanoserver-1809" for windows/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk21-nanoserver-1809'
  checkJdk11WindowsServer2019DockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk11-windowsservercore-ltsc2019" for windows/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk11-windowsservercore-ltsc2019'
  checkJdk17WindowsServer2019DockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk17-windowsservercore-ltsc2019" for windows/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk17-windowsservercore-ltsc2019'
  checkJdk21WindowsServer2019DockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk21-windowsservercore-ltsc2019" for windows/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk21-windowsservercore-ltsc2019'

targets:
  setAlpineDockerImage:
    name: Bump the parent image `jenkins/agent` version on Alpine
    kind: dockerfile
    spec:
      file: alpine/Dockerfile
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setDebianDockerImage:
    name: Bump the parent image `jenkins/agent` version on Debian
    kind: dockerfile
    spec:
      file: debian/Dockerfile
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setDebian21PreviewDockerImage:
    name: Bump the parent image `jenkins/agent` version on Debian
    kind: dockerfile
    spec:
      file: debian/preview/Dockerfile
      instruction:
        keyword: ARG
        matcher: version
    transformers:
      - addsuffix: "-preview"
    scmid: default
  setsNanoserverDockerImage:
    name: Bump the parent image `jenkins/agent` version on Windows Nanoserver
    kind: dockerfile
    spec:
      file: windows/nanoserver/Dockerfile
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setWindowsServerCoreDockerImage:
    name: Bump the parent image `jenkins/agent` version on Windows Server Core
    kind: dockerfile
    spec:
      file: windows/windowsservercore/Dockerfile
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setDockerBakeDefaultParentImage:
    name: Bump the parent image `jenkins/agent` version on the docker-bake.hcl file
    kind: hcl
    spec:
      file: docker-bake.hcl
      path: variable.PARENT_IMAGE_VERSION.default
    scmid: default
  setWindowsBuildPwshParentImage:
    name: Bump the parent image `jenkins/agent` version on the Windows build.ps1 powershell script
    kind: file
    spec:
      file: build.ps1
      matchpattern: >-
        ParentImageVersion(.*)=(.*),
      replacepattern: >-
        ParentImageVersion${1}= '{{ source "lastVersion" }}',
    scmid: default

actions:
  default:
    kind: github/pullrequest
    scmid: default
    title: Bump the parent image `jenkins/agent` version to {{ source "lastVersion" }}
    spec:
      labels:
        - dependencies
        - jenkins/agent
